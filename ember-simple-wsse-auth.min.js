// ============================================================================
// Project:   Simple Wsse Auth - Simple Wsse Authentication for Ember.js
// Copyright: ©2013 Christophe Leemans and contributors
//            Forked from Simple Auth, by Marco Otte-Witte 
//            ember.js is ©2011-2013 Tilde Inc.
// License:   Licensed under MIT license
//            See https://raw.github.com/gerfaut/ember-simple-wsse-auth/master/LICENSE
// ============================================================================


// Copyright: ©2013 Christophe Leemans and contributors
!function(){Ember.SimpleWsseAuth={},Ember.SimpleWsseAuth.BuildXWsseHeader=function(e){var s=e.get("username"),t=e.get("passwordEncoded"),r=this.GenerateNonce(),o=this.GenerateCreatedDate(),n=this.GeneratePasswordDigest(r,o,t);return'UsernameToken Username="'+s+'", PasswordDigest="'+n+'", Nonce="'+r+'", Created="'+o+'"'},Ember.SimpleWsseAuth.GenerateNonce=function(){var e=Math.random().toString(36).substring(2);return CryptoJS.enc.Utf8.parse(e).toString(CryptoJS.enc.Base64)},Ember.SimpleWsseAuth.GeneratePasswordDigest=function(e,s,t){var r=CryptoJS.enc.Base64.parse(e),o=CryptoJS.SHA1(r.concat(CryptoJS.enc.Utf8.parse(s).concat(CryptoJS.enc.Utf8.parse(t)))),n=o.toString(CryptoJS.enc.Base64);return n},Ember.SimpleWsseAuth.EncodePassword=function(e,s){for(var t=e+"{"+s+"}",r=CryptoJS.SHA512(t),o=1;o<this.passwordEncodingIterations;o++)r=CryptoJS.SHA512(r.concat(CryptoJS.enc.Utf8.parse(t)));return this.passwordEncodingAsBase64?r.toString(CryptoJS.enc.Base64):r},Ember.SimpleWsseAuth.GenerateCreatedDate=function(){return(new Date).toISOString()},Ember.SimpleWsseAuth.setup=function(e,s){s=s||{},this.routeAfterLogin=s.routeAfterLogin||"index",this.routeAfterLogout=s.routeAfterLogout||"index",this.loginRoute=s.loginRoute||"login",this.logoutRoute=s.logoutRoute||"logout",this.serverSaltRoute=s.serverSaltRoute||"/salt/{username}",this.serverCheckAccessRoute=s.serverCheckAccessRoute||"/check-access",this.passwordEncodingIterations=s.passwordEncodingIterations||5e3,this.passwordEncodingAsBase64="false"===s.passwordEncodingAsBase64?!1:!0;var t=Ember.SimpleWsseAuth.Session.create();e.register("simple_wsse_auth:session",t,{instantiate:!1,singleton:!0}),Ember.$.each(["model","controller","view","route"],function(s,t){e.inject(t,"session","simple_wsse_auth:session")}),Ember.$.ajaxPrefilter(function(e,s,r){!r.crossDomain&&t.get("isAuthValid")&&(r.setRequestHeader("Authorization",'Authorization profile="UsernameToken"'),r.setRequestHeader("X-WSSE",Ember.SimpleWsseAuth.BuildXWsseHeader(t)))})}}(),function(){Ember.SimpleWsseAuth.Session=Ember.Object.extend({init:function(){this._super(),this.set("username",sessionStorage.username),this.set("passwordEncoded",sessionStorage.passwordEncoded),void 0!==sessionStorage.username&&void 0!==sessionStorage.passwordEncoded&&this.set("accountRestored",!0)},setup:function(e,s){var t=(e.session||{}).salt,r=(e.session||{}).username;this.set("passwordEncoded",Ember.SimpleWsseAuth.EncodePassword(s,t)),this.set("username",r),this.set("accountRestored",!0)},didAccessChecked:function(){this.set("accessChecked",!0)},destroy:function(){this.set("username",void 0),this.set("passwordEncoded",void 0),this.set("accessChecked",void 0),this.set("accountRestored",void 0)},isAuthValid:Ember.computed("username","passwordEncoded",function(){return!Ember.isEmpty(this.get("username"))&&!Ember.isEmpty(this.get("passwordEncoded"))}),isAuthenticated:Ember.computed("username","passwordEncoded","accessChecked",function(){return!Ember.isEmpty(this.get("username"))&&this.get("accessChecked")&&this.get("isAuthValid")}),authDataObserver:Ember.observer(function(){var e=this.get("username");Ember.isEmpty(e)?delete sessionStorage.username:sessionStorage.username=this.get("username");var s=this.get("passwordEncoded");Ember.isEmpty(s)?delete sessionStorage.passwordEncoded:sessionStorage.passwordEncoded=this.get("passwordEncoded")},"passwordEncoded","username")})}(),function(){Ember.SimpleWsseAuth.AuthenticatedRouteMixin=Ember.Mixin.create({beforeModel:function(e){this.get("session.isAuthenticated")||this.redirectToLogin(e)},redirectToLogin:function(e){this.set("session.attemptedTransition",e),this.transitionTo(Ember.SimpleWsseAuth.loginRoute)}})}(),function(){Ember.SimpleWsseAuth.SaltControllerMixin=Ember.Mixin.create({test:!0,actions:{login:function(){var e=this,s=this.getProperties("username"),t=this.getProperties("password");if(!Ember.isEmpty(s.username)){var r=Ember.SimpleWsseAuth.serverSaltRoute;0!==r.indexOf("{username}")&&(r=r.replace("{username}",s.username)),Ember.$.ajax(r).then(function(s){e.get("session").setup(s,t.password),e.send("checkAccess")},function(){Ember.tryInvoke(e,"loginFailed",arguments)})}},checkAccess:function(){if(this.get("session.accountRestored")){var e=this,s=Ember.SimpleWsseAuth.serverCheckAccessRoute;Ember.$.ajax(s).then(function(){e.get("session").didAccessChecked();var s=e.get("session.attemptedTransition");s?(s.retry(),e.set("session.attemptedTransition",null)):e.transitionToRoute(Ember.SimpleWsseAuth.routeAfterLogin)},function(){Ember.tryInvoke(e,"loginFailed",arguments)})}}}})}(),function(){Ember.SimpleWsseAuth.LogoutRouteMixin=Ember.Mixin.create({beforeModel:function(){this.get("session").destroy(),this.transitionTo(Ember.SimpleWsseAuth.routeAfterLogout)}})}();